CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(ybtl2 CXX)

SET(CMAKE_CXX_STANDARD 17)

SET(PROJECTS_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
SET(CMAKE_TESTS_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/tests)

SET(LINK_DEPENDENCIES ybtl linked_list cmocka dl elf dw)

INCLUDE(${PROJECTS_DIR}/utils/get_project_include_path.cmake)
INCLUDE(${PROJECTS_DIR}/utils/setup_unittests.cmake)

GET_INCLUDE_PATH(${PROJECT_SOURCE_DIR} YBTL2_PROJECT_INCLUDE_PATH)

FIND_PROGRAM(CCACHE_FOUND ccache)
IF (CCACHE_FOUND)
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
ENDIF (CCACHE_FOUND)

FILE(GLOB PROJECT_SOURCE_FILES "${PROJECT_SOURCE_DIR}/src/*.cpp")
FILE(GLOB PROJECT_HEADER_FILES "${PROJECT_SOURCE_DIR}/src/*.h")

ADD_LIBRARY(ybtl2 SHARED ${PROJECT_SOURCE_FILES} ${PROJECT_HEADER_FILES})
TARGET_INCLUDE_DIRECTORIES(ybtl2 PRIVATE ${YBTL2_PROJECT_INCLUDE_PATH})
TARGET_LINK_LIBRARIES(ybtl2 elf dw)

ADD_UNITTEST(ybtl_dwarf_unittest)